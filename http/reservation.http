### 0. 토큰 값 획득
GET {{local-reservation-app-url}}/token

> {%
    client.test("Validate", function () {
        client.assert(response.status === 200, "Response status is not 200");
        client.assert(response.contentType.mimeType === "application/json", "Expected 'application/json'");
        client.assert(response.body.length > 0);
    });

    client.global.set("admin_jwt_token", response.body[1].jwtToken);
%}


### 1. reserve
POST {{local-reservation-app-url}}/reservation
Content-Type: application/json
Authorization: {{admin_jwt_token}}

{
  "chargePlaceId": "1150020121HS2022025",
  "time": "2023-10-13T20:00:00"
}

> {%
 client.assert(response.status === 201, "status is not 201")
 client.assert(response.body.reservationId != null, "reservationId is null")

 client.global.set('reservedId', response.body.reservationId)
 %}

### 2. updateSelfReservationTime
PATCH {{local-reservation-app-url}}/reservation
Content-Type: application/json
Authorization: {{admin_jwt_token}}

{
  "reservationValidationId": "{{reservedId}}",
  "email": "admin@test.com",
  "updateTime": "2024-10-13T20:00:00"
}

> {%
 client.assert(response.status === 200, 'status is not 200')
 %}

### 3. forceUpdate
PATCH {{local-reservation-app-url}}/reservation/{{reservedId}}
Content-Type: application/json
Authorization: {{admin_jwt_token}}

{
  "status": "NO_SHOW",
  "reservationTime": "2025-10-13T20:00:00"
}

> {%
 client.assert(response.status === 200, 'status is not 200')
 client.assert(response.body.reserveTime === '2025-10-13T20:00:00', 'reservation time is not updated')
 client.assert(response.body.status === 'NO_SHOW', 'status is not updated')
 %}

### 4. getById
GET {{local-reservation-app-url}}/reservation/{{reservedId}}
Authorization: {{admin_jwt_token}}

> {%
    client.assert(response.status === 200, 'status is not 200')
    client.assert(response.body.reserveTime === '2025-10-13T20:00:00', 'reservation time is not updated')
    client.assert(response.body.status === 'NO_SHOW', 'status is not updated')
%}

### 5. getList
GET {{local-reservation-app-url}}/reservation?email=admin@test.com
Authorization: {{admin_jwt_token}}

> {%
client.assert(response.status === 200, 'status is not 200')
client.assert(response.body.content.length > 0, 'content is not existing')
 %}



### cancel
POST {{local-reservation-app-url}}/reservation/cancel?email=admin@test.com&reservationValidationId={{reservedId}}
Authorization: {{admin_jwt_token}}

> {%
    client.assert(response.status === 200, 'status is not 200')
%}